Manual Expts With Matlab

To build a manual experiment, the stim file needs:

op=+exm
exp=/local/path  # folder containing stimulus descriptions, stimorder
!mat=BinocExpt  #matlab command to be executed at expt start. 

verg requires that the matlab command return a value. If this is a structure than contains the field "stimdir"  then verg will use this so set the pather to the stim files. If you use this, the .stm file does not need exp=.

The exp folder must contatin a file "stimorder" that contains a string of integers which determines the sequence of stimuli, 0 - N-1 for N stimuli.
This file can contain other lines, which will be written into the .smr file without being parsed by binoc. A line of the form

expvars=dx,jv,sl

can be used to record the parameters which will be varying between trials.  This
will then make it into Expt.Header, and so can be used to sort out trials.
You can also set expname here.  


The stimdir must also contain files stim0, stim1 ... stimnN-1 each of which sets the stimulus parameters that need to be set for that trial.   N.B. binoc does not reset any parameters. If file stim0 sets tf to 0, then other stimxx files need to reset tf unless you want it to remain 0 after stim0 is found in stimorder. For this reason it is best to set a value for all variables that are changing in all stim files, even if these do nothing.  (E.g if some stimuli are gratings, it may seem unneccessar to set dd in those stim file.  But then Expt.Trials will contain gratings with two different values of dd, so work must be done to ensure these are grouped togehter before calculating a mean response). 

Note that the .stm file that contains these lines can also set up any other stimulus parameters. The files describing individual stimuli for the experiment don't have to specify everything, only the things that change in this experiment. 

Optional Lines in .stm file

expname=arbitrary  Gives an experiment name that will be used in combine
!mat=BuildExpt   Names a .m file that generates the stim files and stimulusorder file.  
If this is named, then verg will call eval with whateever follows the =.  
!mat=BuildExpt('size',2)
will send those argumnents to BuildExpt

This is called every time the run button is hit, so if the matlab function re-caclulates stimorder, this will generate a new random order for each run. 
You can force it to use the same files and order by using !exptrpt in a sequence run. 

Stim files

These can conatin any lines settting the state of binoc, including stimulus properties or fixation controls. Any line that begins with a recognized code followed by a colon specifies values for each frame: E.G.

ddx: 0 0 0.1 0.1 0.3 -0.1 .....
sets up a sequence of disparity values for each frame in this stimulus. Its your job to be sure that the length is right (i.e. the number of elements matches the value of nf)! These sequences can produce fairly long strings. For this reason, lines with a colon are NOT sent do Spike2 down the serial line. Instead they are written to a text file. Life is much easier if this is in the same location as all the .smr data files. This can be achieved by mounting the PC disk on the mac , and then setting 

netpref=/Volumes/Datafiles

This can even be done in /local/verg.setup or /local/binoc.setup, so that it becomes the default for all experiments run on that machine. Binoc builds the text file name by replacing the drive letter in the filename (in verg) with the prefix here, and then adding “.bnc”. APlaySpkFile looks for this file when building Expt structures, and incorporates the data if the file is found. Obviously this only works if you remember to mount the drive. If this fails, binoc writes all the information to the serial output file, and you will then have to do manual work to get that information into the matlab Expt Structures. To avoid this happening accidentally, binoc checks that this file has  been opened successfully when starting any manual experiment, and pops up a warning if it fails.


In addition there are two lines that are just passed on into the data file

manexvals15 1.0 3.0 4.0

The integer before the first space identifies the stimulus number (i.e. the stim  file).  Note that if you modify the number of stimuli during an expt, this may be hard to interpret.  Any number of numbers can follow exvals, to identify the stimulus properties. E.g. if and experiment is changing two parameters, the first two can encode the value.  The last number is intended to identify the stimulus number. You can put whatever numbers you like here. When the data file is parsed into matlab, each Expt.Trials will have a vector of these values.  

stimtag=arbitray string

a unique identifier for this stimulus.

If the value of stimulus type is set in a stim file, it is best to make that the first line in the file. The intepretation of some values is stimulus dependent.




